@{
    Layout = null;
    bool isLoggedIn = User.Identity.IsAuthenticated;
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - ExamGenerator</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body class="bg-gradient">
    <header class="topbar">
        <div class="container-fluid">
            <div class="logo">
                <span class="brand">ExamGenerator</span>
            </div>
            <nav class="nav-actions">
                <a class="plus-btn" href="#">Plus <span><!-- svg aquí --></span></a>
                <a class="register-btn" href="#">Mi Cuenta</a>
            </nav>
        </div>
    </header>

    <main class="main-content">
        @RenderBody()
    </main>



    <!-- Overlay -->
    <div id="overlay" class="overlay"></div>

    <!-- Popup login/registro -->
    <div id="authPopup" class="popup">
        <button class="close-btn" onclick="cerrarPopup()">✕</button>
        <h3 id="popupTitle">Inicia sesión</h3>
        <div class="card-container">
            <div class="card">
                <form id="loginForm" class="card-face front">
                    <input type="email" name="email" placeholder="Email" />
                    <input type="password" name="pass" placeholder="Contraseña" />
                    <button type="submit" class="submit-btn">Ingresar</button>
                </form>

                <form id="registerForm" class="card-face back">
                    <input type="text" name="name" placeholder="Nombre completo" />
                    <input type="email" name="email" placeholder="Email" />
                    <input type="password" name="pass" placeholder="Contraseña" />
                    <input type="password" name="confirmPass" placeholder="Confirmar contraseña" />
                    <button type="submit" class="submit-btn">Registrarse</button>
                </form>
            </div>
        </div>
        <a href="#" id="toggleForm" class="register-link">¿No tienes cuenta? Registrate</a>
    </div>

    <!-- Menú usuario -->
    <div id="userMenu" class="dropdown-menu" style="display:none;">
        <a href="/Account/Profile">Perfil</a>
        <a href="/Account/Logout">Cerrar sesión</a>
    </div>

    <script>
        const cuentaBtn = document.querySelector('.register-btn');
        const authPopup = document.getElementById('authPopup');
        const overlay = document.getElementById('overlay');
        const userMenu = document.getElementById('userMenu');
        const toggleLink = document.getElementById('toggleForm');
        const popupTitle = document.getElementById('popupTitle');
        const card = document.querySelector('.card');
        const cardContainer = document.querySelector('.card-container');
        const loginForm = document.getElementById('loginForm');
        const registerForm = document.getElementById('registerForm');
        const isLoggedIn = @isLoggedIn.ToString().ToLower() === "true";

        // Función para enviar formularios con fetch (AJAX)
        function enviarFormulario(form, url) {
            form.addEventListener('submit', function(e){
                e.preventDefault();
                const data = new FormData(this);
                fetch(url, { method: 'POST', body: data })
                    .then(res => res.json())
                    .then(resp => {
                        if(resp.success){
                            popupTitle.textContent = resp.mensaje;
                            authPopup.classList.remove('show');
                            overlay.classList.remove('show');
                            // Aquí podés actualizar botones, mostrar nombre de usuario, etc.
                        } else {
                            alert(resp.mensaje);
                        }
                    });
            });
        }

        enviarFormulario(loginForm, '/Account/Login');
        enviarFormulario(registerForm, '/Account/Register');

        // Abrir popup
        cuentaBtn.addEventListener('click', e => {
            e.preventDefault();
            if(!isLoggedIn){
                authPopup.classList.add('show');
                overlay.classList.add('show');
            } else {
                userMenu.style.display = userMenu.style.display === 'block' ? 'none' : 'block';
            }
        });

        // Cerrar popup
        function cerrarPopup() {
            authPopup.classList.remove('show');
            overlay.classList.remove('show');
            card.classList.remove('flipped');
            popupTitle.textContent = 'Inicia sesión';
            toggleLink.textContent = '¿No tienes cuenta? Registrate';
        }

        // Alternar login/registro
        toggleLink.addEventListener('click', e => {
            e.preventDefault();
            card.classList.toggle('flipped');
            if(card.classList.contains('flipped')){
                popupTitle.textContent = 'Registro';
                toggleLink.textContent = '¿Ya tienes cuenta? Inicia sesión';
                cardContainer.style.setProperty('height','350px','important');
            } else {
                popupTitle.textContent = 'Inicia sesión';
                toggleLink.textContent = '¿No tienes cuenta? Registrate';
                cardContainer.style.setProperty('height','220px','important');
            }
        });

        // Cerrar menú si clic afuera
        document.addEventListener('click', e=>{
            if(!userMenu.contains(e.target) && !cuentaBtn.contains(e.target)){
                userMenu.style.display='none';
            }
        });
        overlay.addEventListener('click', cerrarPopup);
    </script>
</body>
</html>